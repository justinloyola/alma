[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "alma-backend"
version = "0.1.0"
description = "Backend for Alma application"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]

[tool.hatch.build]
packages = ["app"]

[tool.hatch.build.targets.wheel]
packages = ["app"]
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn>=0.24.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-dotenv>=1.0.0",
    "email-validator>=2.1.0",
    "python-json-logger>=2.0.7",
    "python-magic>=0.4.27; sys_platform != 'win32'",
    "python-magic-bin>=0.4.14; sys_platform == 'win32'",
    "sqlalchemy>=2.0.23",
    "alembic>=1.12.1",
    "pydantic>=2.5.1",
    "pydantic-settings>=2.0.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
]

[lint]
# Basic configuration
select = ["E", "F", "I"]
ignore = [
    "F401",  # Allow unused imports for type checking
    "E402",  # Module level import not at top of file - handled by isort
]
fixable = ["ALL"]

# Ignore E402 in specific files
per-file-ignores = [
    "alembic/env.py:E402",
    "create_tables.py:E402",
    "scripts/migrate.py:E402",
    "scripts/setup_db.py:E402",
]
unfixable = []
line-length = 88

[tool.ruff]
# Exclude directories from linting
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    "__pycache__",
    "venv",
    "node_modules",
    "dist",
    "build",
]

[tool.ruff.lint]
# Configure isort
[tool.ruff.lint.isort]
known-first-party = ["app"]

# Configure flake8-quotes
[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[project.scripts]
alma = "app.main:main"

[tool.hatch.envs.default.scripts]
# Lint and format code
lint = "ruff check . --fix"
format = "ruff format ."
typecheck = "mypy app"
# Run all checks
check = ["lint", "format", "typecheck"]
# Run tests with coverage
test = "pytest --cov=app --cov-report=term-missing"
# Run all checks and tests
all = ["check", "test"]
